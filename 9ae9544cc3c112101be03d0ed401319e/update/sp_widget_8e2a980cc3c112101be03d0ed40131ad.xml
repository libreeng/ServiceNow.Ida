<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function(nowServer, spUtil, $http, $timeout) {
  /* widget controller */
  var c = this;
	
	c.data.chatState = {
    variables: [
      {
        "key": "advancedCitation",
        "value": "true"
      },
      {
        "key": "userChat",
        "value": "true"
      },
      {
        "key": "useDocument",
        "value": "true"
      },
      {
        "key": "useCall",
        "value": "true"
      },
      {
        "key": "useImage",
        "value": "true"
      },
      {
        "key": "useCollection",
        "value": "true"
      }
    ],
    chatHistory: [
      {
        timestamp: new Date().toISOString(),
        userName: "Me",
        content: "Help!"
      }
    ]
  };
	
	c.scrollToBottom = function() {
		// Scroll to bottom of chat history
		var chatHistory = $(".chat-history")[0];
		chatHistory.scrollTop = chatHistory.scrollHeight;
	};

	c.mdToHtml = function(markdownText) {
		var converter = new showdown.Converter({ openLinksInNewWindow: true});
		return converter.makeHtml(markdownText);
	};
	
	c.appendUserMessage = function(msg) {
    c.data.chatState.chatHistory.push(msg);
    var html = '\n' +
'                    <li class="clearfix">' +
'                        <div class="message-data text-right">' +
'                            <span class="message-user">Me</span>' +
'                            <span class="message-data-time">' + new Date(msg.timestamp).toLocaleString() + '</span>' +
'  </div>' +
'                        <div class="message my-message float-right">' + c.mdToHtml(msg.content) + '</div>' +
'  </li>';

    var list = document.getElementById("chatHistoryList");
    list.insertAdjacentHTML("beforeend", html);
    c.scrollToBottom();
  }

  c.appendIdaResponse = function(response) {
    var msg = {
      timestamp: new Date().toISOString(),
      userName: "Bot",
      content: response.value
    };
    c.data.chatState.chatHistory.push(msg);

    var references = "";
    if (response.variables) {
      var refsItem = response.variables.find(function (v) { return v.key === "references"; });
      if (refsItem) {
        var refs = JSON.parse(refsItem.value);
        refs = refs.map(function (r) { 
					return '<div class="reference">[<a href="' + r.Source + '" target="_blank">' + r.Number + '</a>] <a href="' + r.Source + '" target="_blank">' + r.LinkLabel + '</a></div>';
				});

        if (refs.length > 0) {
          refs.splice(0, 0, "<br/>");
          references = refs.join("\r\n");
        }
      }
    }
    var html = '' +
'                    <li class="clearfix">' +
'                        <div class="message-data">' +
'                            <span class="message-user">Ida</span>' +
'                            <span class="message-data-time">' + new Date(msg.timestamp).toLocaleString() + '</span>' +
'  </div>' +
'                        <div class="message other-message">' +
'                            ' + c.mdToHtml(msg.content) +
'                            ' + references +
'  </div>' +
'  </li>';

    var list = document.getElementById("chatHistoryList");
    list.insertAdjacentHTML("beforeend", html);
    c.scrollToBottom();
  };
	
	c.submitChatRequest = function() {
		$("#loadingStatus").css("display", "flex");
		$(".chat-footer").css("height", "120px");
		$(".chat-history").css("height", "calc(100% - 188px)")

		var userInput = $("#userInput")[0];
		var userInputText = userInput.value;
		if (!userInputText) {
			return;
		}

		var userMessage = {
			timestamp: new Date().toISOString(),
			userName: "Me",
			content: userInputText
		};
		c.appendUserMessage(userMessage);
		userInput.value = "";

		c.scrollToBottom();
		
		// Have server talk to Ida API and get a response
		return c.server.update().then(function() {
			if (c.data.idaResponse) {
				c.appendIdaResponse(c.data.idaResponse);
			}
			
			$("#loadingStatus").css("display", "none");
			$(".chat-footer").css("height", "60px");
			$(".chat-history").css("height", "calc(100% - 128px)")
		});
	};

	// On load
	c.appendIdaResponse({
		value: "Hello, I am Ida, how can I help?"
	});

	var userInput = $("#userInput")[0];
	userInput.addEventListener("keyup", function (evt) {
		// Submit chat request on Enter key
		if (evt.key === "Enter") {
			evt.preventDefault();
			c.submitChatRequest();
		}
	});

};]]></client_script>
        <controller_as>c</controller_as>
        <css>
&lt;style&gt;

  body {
    background-color: #f4f7f6;
//    font-size: 0.85em !important;
    height: 100%;
    margin: 0;
  }

  .card {
      background: #fff;
      transition: .5s;
      border: 0;
      position: relative;
      width: 100%;
      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
  }

  .chat-app {
      height: 100%;
  }

  .chat-app .people-list {
      width: 280px;
      position: absolute;
      left: 0;
      top: 0;
      padding: 20px;
      z-index: 7
  }

  .chat-app .chat {
      /*border-left: 1px solid #eaeaea*/
      height: 100%;
    font-size: medium !important;
  }

  .people-list {
      -moz-transition: .5s;
      -o-transition: .5s;
      -webkit-transition: .5s;
      transition: .5s
  }

  .people-list .chat-list li {
      padding: 10px 15px;
      list-style: none;
      border-radius: 3px
  }

  .people-list .chat-list li:hover {
      background: #efefef;
      cursor: pointer
  }

  .people-list .chat-list li.active {
      background: #efefef
  }

  .people-list .chat-list li .name {
      font-size: 15px
  }

  .people-list .chat-list img {
      width: 45px;
      border-radius: 50%
  }

  .people-list img {
      float: left;
      border-radius: 50%
  }

  .people-list .about {
      float: left;
      padding-left: 8px
  }

  .people-list .status {
      color: #999;
      font-size: 13px
  }

  .chat .chat-header {
      padding: 6px 16px;
      border-bottom: 2px solid #f4f7f6;
      height: 60px;
  }

  .chat .chat-header img {
      float: left;
      border-radius: 40px;
      width: 40px
  }

  .chat .chat-header .chat-about {
      float: left;
      padding-left: 10px;
  }

  .chat-header .chat-about h6 {
      font-size: 1em !important;
      margin-bottom: 0px;
  }

  .chat-header .chat-about {
      font-weight: 400;
  }

  .chat .chat-history {
      padding: 12px;
      border-bottom: 2px solid #fff;
      height: calc(100% - 128px);
      overflow: auto;
  }

  .chat .chat-history ul {
      padding: 0
  }

  .chat .chat-history ul li {
      list-style: none;
      margin-bottom: 20px
  }

  .chat .chat-history ul li:last-child {
      margin-bottom: 0px
  }

  .chat .chat-history .message-data {
      margin-bottom: 5px
  }

  .chat .chat-history .message-data img {
      border-radius: 40px;
      width: 40px
  }

  .chat .chat-history .message-data-time {
      color: #434651;
      padding-left: 6px
  }

  .chat .chat-history .message {
      color: #444;
      padding: 6px 12px;
      font-size: 1em;
      border-radius: 7px;
      display: inline-block;
      position: relative
  }

  .chat .chat-history .message p {
      margin-block-end: 0px;
  }

  .chat .chat-history .message ol li {
      list-style: unset;
      margin-bottom: 0px !important;
  }

  .chat .chat-history .message-data .message-user {
      font-weight: bold;
  }

  .chat .chat-history .other-message {
      background: #efefef
  }

  .chat .chat-history .reference {
      background: #efefef
  }

  .chat .chat-history .my-message {
      background: rgb(25, 118, 210);
      color: rgb(255, 255, 255);
      text-align: right
  }

  .chat .chat-history .my-message:after {
      border-bottom-color: #e8f1f3;
      left: 93%
  }

  .chat .chat-footer {
      padding: 8px;
      height: 60px;
	    align-content: flex-end;
  }

  .chat .chat-footer input {
      font-size: 1em;
  }

  .online,
  .offline,
  .me {
      margin-right: 2px;
      font-size: 8px;
      vertical-align: middle
  }

  .online {
      color: #86c541
  }

  .offline {
      color: #e47297
  }

  .me {
      color: #1d8ecd
  }

  .float-right {
      float: right
  }

  .clearfix:after {
      visibility: hidden;
      display: block;
      font-size: 0;
      content: " ";
      clear: both;
      height: 0
  }

  .send-button {
      cursor: pointer;
  }

  .send-button:hover {
      background-color: #d0d0d0;
  }

  @media only screen and (max-width: 767px) {
      .chat-app {
          height: 100%;
      }

      .chat-app .people-list {
          height: 465px;
          width: 100%;
          overflow-x: auto;
          background: #fff;
          left: -400px;
          display: none
      }

      .chat-app .people-list.open {
          left: 0
      }

      .chat-app .chat {
          margin: 0;
          height: 100%;
      }

      .chat-app .chat-history {
          height: calc(100% - 200px);
          overflow: auto
      }
  }

  @media only screen and (min-width: 768px) and (max-width: 992px) {
      .chat-app .chat-list {
          height: 650px;
          overflow-x: auto
      }

      .chat-app .chat-history {
          height: calc(100% - 200px);
          overflow: auto
      }
  }

  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 1) {
      .chat-app .chat-list {
          height: 480px;
          overflow-x: auto
      }

      .chat-app .chat-history {
          height: calc(100% - 200px);
          overflow: auto
      }
  }

  .infinity-loader {
      position: var(--infinity-loader-position);
      left: var(--infinity-loader-left);
      top: var(--infinity-loader-top);
      transform: translate(-50%, -50%);
      width: calc(2 * var(--infinity-loader-width) - var(--infinity-loader-progress-width));
      height: var(--infinity-loader-height);
  }

  .infinity-loader .bg div,
  .infinity-loader &gt; .fg &gt; div &gt; div {
      width: var(--infinity-loader-width);
      height: var(--infinity-loader-height);
      border: var(--infinity-loader-progress-width) solid #aaa;
      box-sizing: border-box;
      border-radius: 50%;
      border-color: transparent;
      position: absolute;
  }

  .infinity-loader .right-bg {
      transform: translate(100%, 0);
      left: calc(-1 * var(--infinity-loader-progress-width));
  }

  .infinity-loader &gt; .fg &gt; div &gt; div {
      border-color: #49EBEA #49EBEA transparent transparent;
      transform: rotate(135deg);
      animation: spin 1s linear infinite;
      position: static;
  }

  .infinity-loader &gt; .fg &gt; div {
      clip: rect(0, var(--infinity-loader-width), calc(var(--infinity-loader-width) / 2), 0);
      position: absolute;
  }

  .infinity-loader &gt; .fg &gt; .bottom-right-rect {
      left: calc(-1 * var(--infinity-loader-progress-width));
      transform: translateX(100%) scale(1, -1);
  }

  .infinity-loader &gt; .fg &gt; .bottom-right-rect &gt; div {
      animation-delay: 0.25s;
  }

  .infinity-loader &gt; .fg &gt; .top-right-rect {
      left: calc(-1 * var(--infinity-loader-progress-width));
      transform: translateX(100%) scale(-1, 1);
  }

  .infinity-loader &gt; .fg &gt; .top-right-rect &gt; div {
      animation-delay: 0.5s;
  }

  .infinity-loader &gt; .fg &gt; .bottom-left-rect {
      transform: scale(-1);
  }

  .infinity-loader &gt; .fg &gt; .bottom-left-rect &gt; div {
      animation-delay: 0.75s;
  }

  .infinity-loader &gt; .fg {
      filter: drop-shadow(0 0 6px #49EBEA);
  }

  @keyframes spin {
      50%, 100% {
          transform: rotate(495deg);
      }
  }


  img.ida-chat-icon {
    content: url('data:image/svg+xml,&lt;svg width="55" height="40" viewBox="0 0 55 40" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;&lt;path d="M32.7247 40H21.8739C9.79416 40 0 31.0449 0 20C0 8.95512 9.79416 0 21.8739 0H32.7247C44.8044 0 54.5985 8.95512 54.5985 20C54.5985 31.0449 44.8044 40 32.7247 40Z" fill="%232369F5"/&gt;&lt;path d="M23.3283 27.5977L16.2497 36.0294V26.7224C16.2497 25.8695 16.9478 25.1737 17.8036 25.1737H21.7745C22.6302 25.1737 23.3283 25.8695 23.3283 26.7224V27.5977Z" fill="white"/&gt;&lt;path d="M30.7072 19.6001C30.7072 21.1263 29.4686 22.3608 27.9373 22.3608C26.9915 22.3608 25.0999 22.3533 25.0999 22.3533V16.8619C25.0999 16.8619 26.4135 16.8469 27.9448 16.8469C29.4686 16.8394 30.7072 18.0739 30.7072 19.6001Z" fill="white"/&gt;&lt;path d="M32.4863 19.5999C32.4863 18.0737 33.7249 16.8393 35.2562 16.8393C36.202 16.8393 38.0936 16.8467 38.0936 16.8467V22.3381C38.0936 22.3381 36.78 22.3531 35.2487 22.3531C33.7174 22.3531 32.4863 21.1261 32.4863 19.5999Z" fill="white"/&gt;&lt;path d="M20.3934 22.3457H19.3274C17.8036 22.3457 16.5726 21.1187 16.5726 19.6C16.5726 18.0813 17.8036 16.8543 19.3274 16.8543H20.3934C21.9172 16.8543 23.1482 18.0813 23.1482 19.6C23.1482 21.1187 21.9172 22.3457 20.3934 22.3457Z" fill="white"/&gt;&lt;path d="M35.5414 7.40527H19.0572C12.3014 7.40527 6.82168 12.8668 6.82168 19.6001C6.82168 25.3683 10.8451 30.2013 16.2498 31.4732V27.089C13.2097 25.9519 11.0328 23.0266 11.0328 19.6001C11.0328 15.1935 14.6284 11.6024 19.0572 11.6024H35.5339C39.9552 11.6024 43.5583 15.186 43.5583 19.6001C43.5583 24.0067 39.9627 27.5978 35.5339 27.5978H35.2862V31.7949H35.5339C42.2897 31.7949 47.7694 26.3334 47.7694 19.6001C47.7694 12.8668 42.2972 7.40527 35.5414 7.40527Z" fill="white"/&gt;&lt;path d="M23.3283 27.5977L19.8078 31.7949H35.2936L35.7065 27.5978L23.3283 27.5977Z" fill="url(%23paint0_linear_235_56594)"/&gt;&lt;defs&gt;&lt;linearGradient id="paint0_linear_235_56594" x1="24.4919" y1="26.4372" x2="32.5523" y2="34.5246" gradientUnits="userSpaceOnUse"&gt;&lt;stop stop-color="%232369F5"/&gt;&lt;stop offset="0.1119" stop-color="%234A84F7"/&gt;&lt;stop offset="0.4" stop-color="%23ABC6FB"/&gt;&lt;stop offset="0.6012" stop-color="%23E7EFFE"/&gt;&lt;stop offset="0.6966" stop-color="white"/&gt;&lt;/linearGradient&gt;&lt;/defs&gt;&lt;/svg&gt;');
	}

&lt;/style&gt;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>onsightnowidachat</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>OnsightNOWIdaChat</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	if (input) {
		data.chatState = input.chatState;
		
		// Call Onsight NOW Ida Chat API, passing in input.chatState
		try { 
			var r = new sn_ws.RESTMessageV2('x_1494535_onsigh_1.OnsightNOW Ida Chat', 'Post Chat Message');
		 	r.setRequestBody(JSON.stringify(input.chatState));
			
			var response = r.execute();
		 	var responseBody = response.getBody();
		 	var httpStatus = response.getStatusCode();
			console.log(httpStatus);
			if (httpStatus === 200) {
				data.idaResponse = JSON.parse(responseBody);
			}
		}
		catch(ex) {
			console.log(ex.message);
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-29 19:35:55</sys_created_on>
        <sys_id>8e2a980cc3c112101be03d0ed40131ad</sys_id>
        <sys_mod_count>126</sys_mod_count>
        <sys_name>OnsightNOWIdaChat</sys_name>
        <sys_package display_value="Onsight NOW Ida Chat" source="x_1494535_onsigh_1">9ae9544cc3c112101be03d0ed401319e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Onsight NOW Ida Chat">9ae9544cc3c112101be03d0ed401319e</sys_scope>
        <sys_update_name>sp_widget_8e2a980cc3c112101be03d0ed40131ad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-01 02:16:45</sys_updated_on>
        <template><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css">
<!--
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
-->

<div class="card chat-app">
  <div class="chat">

    <div class="chat-header clearfix">
      <div class="row" style="margin-top: 6px;">
        <div class="col-lg-6">
          <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
            <img class="ida-chat-icon" alt="avatar">
          </a>
          <div class="chat-about">
            <h6 class="m-b-0">Ida</h6>
            <span>Your industrial digital assistant</span>
          </div>
        </div>
      </div>
    </div>

    <div class="chat-history">
      <ul id="chatHistoryList" class="m-b-0">
      </ul>
    </div>

    <div class="chat-footer clearfix">

      <div id="loadingStatus" style="display: none; padding: 8px;">
        <img class="ida-chat-icon" style="height: 40px; margin-right: 20px;" />
        <div class="infinity-loader" style="justify-items: start; --infinity-loader-width: 20px; --infinity-loader-height: 20px; --infinity-loader-progress-width: 2px; --infinity-loader-position: relative; --infinity-loader-top: 18px; --infinity-loader-left: 0px">
          <div class="bg">
            <div class="left-bg"></div>
            <div class="right-bg"></div>
          </div>
          <div class="fg">
            <div class="top-left-rect" style="position: absolute; clip: rect(0, var(--infinity-loader-width), calc(var(--infinity-loader-width) / 2), 0);">
              <div></div>
            </div>
            <div class="bottom-right-rect" style="position: absolute; clip: rect(0, var(--infinity-loader-width), calc(var(--infinity-loader-width) / 2), 0); left: calc(-1 * var(--infinity-loader-progress-width)); transform: translateX(100%) scale(1, -1);">
              <div></div>
            </div>
            <div class="top-right-rect" style="position: absolute; clip: rect(0, var(--infinity-loader-width), calc(var(--infinity-loader-width) / 2), 0); left: calc(-1 * var(--infinity-loader-progress-width)); transform: translateX(100%) scale(-1, 1);">
              <div></div>
            </div>
            <div class="bottom-left-rect" style="position: absolute; clip: rect(0, var(--infinity-loader-width), calc(var(--infinity-loader-width) / 2), 0);">
              <div></div>
            </div>
          </div>
        </div>
      </div>

      <div class="input-group mb-0">
        <input id="userInput" type="text" class="form-control" placeholder="Ask questions & make requests...">
        <div class="input-group-append">
          <span class="input-group-text send-button" ng-click="c.submitChatRequest()">
            <i class="fa fa-send"></i>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
